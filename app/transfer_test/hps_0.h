#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'cnn_top_0', class 'cnn_top'
 * The macros are prefixed with 'CNN_TOP_0_'.
 * The prefix is the slave descriptor.
 */
#define CNN_TOP_0_COMPONENT_TYPE cnn_top
#define CNN_TOP_0_COMPONENT_NAME cnn_top_0
#define CNN_TOP_0_BASE 0x0
#define CNN_TOP_0_SPAN 1024
#define CNN_TOP_0_END 0x3ff

/*
 * Macros for device 'vhdmi_0', class 'vhdmi'
 * The macros are prefixed with 'VHDMI_0_'.
 * The prefix is the slave descriptor.
 */
#define VHDMI_0_COMPONENT_TYPE vhdmi
#define VHDMI_0_COMPONENT_NAME vhdmi_0
#define VHDMI_0_BASE 0x400
#define VHDMI_0_SPAN 1024
#define VHDMI_0_END 0x7ff

/*
 * Macros for device 'vcam_0', class 'vcam'
 * The macros are prefixed with 'VCAM_0_'.
 * The prefix is the slave descriptor.
 */
#define VCAM_0_COMPONENT_TYPE vcam
#define VCAM_0_COMPONENT_NAME vcam_0
#define VCAM_0_BASE 0x800
#define VCAM_0_SPAN 64
#define VCAM_0_END 0x83f

/*
 * Macros for device 'ddr3_vga_0', class 'ddr3_vga'
 * The macros are prefixed with 'DDR3_VGA_0_'.
 * The prefix is the slave descriptor.
 */
#define DDR3_VGA_0_COMPONENT_TYPE ddr3_vga
#define DDR3_VGA_0_COMPONENT_NAME ddr3_vga_0
#define DDR3_VGA_0_BASE 0x840
#define DDR3_VGA_0_SPAN 64
#define DDR3_VGA_0_END 0x87f

/*
 * Macros for device 'dvp_ddr3_0', class 'dvp_ddr3'
 * The macros are prefixed with 'DVP_DDR3_0_'.
 * The prefix is the slave descriptor.
 */
#define DVP_DDR3_0_COMPONENT_TYPE dvp_ddr3
#define DVP_DDR3_0_COMPONENT_NAME dvp_ddr3_0
#define DVP_DDR3_0_BASE 0x880
#define DVP_DDR3_0_SPAN 64
#define DVP_DDR3_0_END 0x8bf

/*
 * Macros for device 'sld_hub_controller_system_0_link', class 'altera_mm_debug_link'
 * The macros are prefixed with 'SLD_HUB_CONTROLLER_SYSTEM_0_LINK_'.
 * The prefix is the slave descriptor.
 */
#define SLD_HUB_CONTROLLER_SYSTEM_0_LINK_COMPONENT_TYPE altera_mm_debug_link
#define SLD_HUB_CONTROLLER_SYSTEM_0_LINK_COMPONENT_NAME sld_hub_controller_system_0_link
#define SLD_HUB_CONTROLLER_SYSTEM_0_LINK_BASE 0x900
#define SLD_HUB_CONTROLLER_SYSTEM_0_LINK_SPAN 128
#define SLD_HUB_CONTROLLER_SYSTEM_0_LINK_END 0x97f

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x1000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x1007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1679228179

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x3000
#define LED_PIO_SPAN 16
#define LED_PIO_END 0x300f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 1
#define LED_PIO_DATA_WIDTH 20
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE RISING
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 1
#define LED_PIO_HAS_OUT 0
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIPSW_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define DIPSW_PIO_BASE 0x4000
#define DIPSW_PIO_SPAN 16
#define DIPSW_PIO_END 0x400f
#define DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIPSW_PIO_CAPTURE 0
#define DIPSW_PIO_DATA_WIDTH 3
#define DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define DIPSW_PIO_EDGE_TYPE NONE
#define DIPSW_PIO_FREQ 50000000
#define DIPSW_PIO_HAS_IN 0
#define DIPSW_PIO_HAS_OUT 1
#define DIPSW_PIO_HAS_TRI 0
#define DIPSW_PIO_IRQ_TYPE NONE
#define DIPSW_PIO_RESET_VALUE 7

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x5000
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x500f
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 0
#define BUTTON_PIO_DATA_WIDTH 3
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE NONE
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 0
#define BUTTON_PIO_HAS_OUT 1
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE NONE
#define BUTTON_PIO_RESET_VALUE 7

/*
 * Macros for device 'data_reorg_0', class 'data_reorg'
 * The macros are prefixed with 'DATA_REORG_0_'.
 * The prefix is the slave descriptor.
 */
#define DATA_REORG_0_COMPONENT_TYPE data_reorg
#define DATA_REORG_0_COMPONENT_NAME data_reorg_0
#define DATA_REORG_0_BASE 0x8000
#define DATA_REORG_0_SPAN 1024
#define DATA_REORG_0_END 0x83ff


#endif /* _ALTERA_HPS_0_H_ */
